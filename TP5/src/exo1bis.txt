3. 

int : 4 octets
short int : 2 octets
float : 4 octets
double : 8 octets

Selon le type stocké, la place prise en mémoire est plus ou moins grande.
Pour optimiser la mémoire, il est intéressant d'utiliser des types adaptés aux besoins.

4.


0xADRESSE_1 = *px   -> 0xADRESSE_2    [?]
                    -> 0xADRESSE_2+1  [?]
                    -> 0xADRESSE_2+2  [?]
                    -> 0xADRESSE_2+3  [?]

px est un pointeur qui pointe vers la première case du zone mémoire de 4 octets car nous 
avons déclaré un malloc de la taille d'un int.
Ensuite on dit que la valeur pointé par le pointeur px vaut 1


0xADRESSE_1 = *px   -> 0xADRESSE_2    [WWWW WWWW]    \
                    -> 0xADRESSE_2+1  [XXXX XXXX]    |_  Représentation du nombre 1 en binaire
                    -> 0xADRESSE_2+2  [YYYY YYYY]    |
                    -> 0xADRESSE_2+3  [ZZZZ ZZZZ]    /

